version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "5432:5432"

  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql+psycopg://$POSTGRES_USER:$POSTGRES_PASSWORD@db:5432/$POSTGRES_DB
      # В контейнер смонтируем хостовые папки с видео в /videos
      VIDEO_ROOTS: ${VIDEO_ROOTS}
      # Настройки по умолчанию
      DEFAULT_FRAMES: 20
      DEFAULT_SCALE: 320
      DEFAULT_THRESHOLD: 0.88
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ${HOST_VIDEO_DIR1:-.}:/videos/dir1:ro
      - ${HOST_VIDEO_DIR2:-.}:/videos/dir2:ro
    command: ["/entrypoint.sh"]
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      backend:
        condition: service_started
    ports:
      - "8080:80"              # фронт доступен на http://localhost:8080
    restart: unless-stopped

  worker:
    build: ./backend
    environment:
      DATABASE_URL: postgresql+psycopg://$POSTGRES_USER:$POSTGRES_PASSWORD@db:5432/$POSTGRES_DB
      WORKER_POLL_INTERVAL: 2
    depends_on:
      - db
    command: python -m app.worker
    deploy:
      replicas: 3

volumes:
  db-data: